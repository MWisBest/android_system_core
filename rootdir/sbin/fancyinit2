#!/system/bin/sh

bbox=/sbin/binaries/busybox
t2fs=/sbin/binaries/tune2fs

# init.d support
if [ ! -e /system/etc/init.d ] ; then
  $bbox mount -o remount,rw /system
  $bbox mkdir /system/etc/init.d
  $bbox chown -R root.root /system/etc/init.d
  $bbox chmod -R 755 /system/etc/init.d
  $bbox mount -o remount,ro /system
fi

# set writeback journalling mode
if [ ! -e /data/writebackenabled ] ; then
  $t2fs -o journal_data_writeback /dev/block/platform/omap/omap_hsmmc.0/by-name/userdata
  $bbox touch /data/writebackenabled
  needreboot=1
fi
if [ ! -e /cache/writebackenabled ] ; then
  $t2fs -o journal_data_writeback /dev/block/platform/omap/omap_hsmmc.0/by-name/cache
  $bbox touch /cache/writebackenabled
  needreboot=1
fi
if [ ! -e /system/writebackenabled ] ; then
  $t2fs -o journal_data_writeback /dev/block/platform/omap/omap_hsmmc.0/by-name/system
  $bbox mount -o remount,rw /system
  $bbox touch /system/writebackenabled
  needreboot=1
fi

# powerHAL fix
if [ ! -e /system/lib/hw/power.tuna.so.bak ] ; then
  $bbox mount -o remount,rw /system
  $bbox mv /system/lib/hw/power.tuna.so /system/lib/hw/power.tuna.so.bak
  $bbox cp /sbin/power.tuna.so /system/lib/hw/
  $bbox chmod 644 /system/lib/hw/power.tuna.so
  needreboot=1
fi

# disable 1080p with BIGMEM-enabled kernels
version=$($bbox uname -r | $bbox awk -F- '{print $NF}')
if [[ $version == big ]] && [[ ! -e /system/etc/media_profiles.xml.bak ]] ; then
  $bbox mount -o remount,rw /system
  $bbox mv /system/etc/media_profiles.xml /system/etc/media_profiles.xml.bak
  $bbox cp /sbin/media_profiles.xml /system/etc/
  $bbox chown root:root /system/etc/media_profiles.xml
  $bbox chmod 644 /system/etc/media_profiles.xml
  $bbox cp /sbin/bigmemcheck /system/etc/init.d/62bigmemcheck
  $bbox chown root:root /system/etc/init.d/62bigmemcheck
  $bbox chmod 755 /system/etc/init.d/62bigmemcheck
  needreboot=1
fi

if [ $needreboot -eq 1 ] ; then 
  reboot
fi

# execute init.d scripts
$bbox run-parts /system/etc/init.d

# wait for system being 'up'
until [ $($bbox pgrep com.android.systemui) ] ; do
  $bbox sleep 1
done

# ensure max cpu freq is set properly
$bbox echo 1228800 > /sys/devices/system/cpu/cpu0/cpufreq/scaling_max_freq

# change some processes' cgroups and priorities
$bbox sleep 5

$bbox echo 91 > /dev/cpuctl/apps/bg_non_interactive/cpu.shares
$bbox echo 400000 > /dev/cpuctl/apps/bg_non_interactive/cpu.rt_runtime_us

$bbox renice -18 $($bbox pgrep com.android.systemui)
$bbox renice 5 $($bbox pgrep kswapd)

$bbox echo $($bbox pgrep com.android.systemui) > /dev/cpuctl/tasks

# set cgroup_timer_slack for bg_non_interactive tasks
$bbox echo 100000000 > /dev/cpuctl/apps/bg_non_interactive/timer_slack.min_slack_ns

# low memory killer whitelist for common launchers
$bbox sleep 20

list="com.cyanogenmod.trebuchet com.android.launcher org.adw.launcher org.adwfreak.launcher com.anddoes.launcher com.gau.go.launcherex com.mobint.hololauncher com.mobint.hololauncher.hd com.teslacoilsw.launcher org.zeam com.chrislacy.actionlauncher.pro com.android.lmt com.tsf.shell com.miui.mihome2 com.qihoo360.launcher com.gtp.nextlauncher net.alamoapps.launcher"

if [ ! -e /data/nowhitelist ] ; then
  for class in $list ; do
    if [ $($bbox pgrep $class) ] ; then
      pid=$($bbox pgrep $class)
      until [ -e /proc/$pid ] ; do
        $bbox sleep 1
      done
      $bbox echo -17 > /proc/$pid/oom_adj
      break
    fi
  done
fi
